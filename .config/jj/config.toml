"$schema" = "https://jj-vcs.github.io/jj/prerelease/config-schema.json"

[user]
name = "Caleb White"
email = "cdwhite3@pm.me"

[aliases]
g = ["git"]
tug = ["bookmark", "move", "--from", "closest_bookmark(@)", "--to", "closest_pushable(@)"]

[colors]
# "diff token" = { underline = false }

[git]
private-commits = "description(glob:'wip:*') | description(glob:'private:*')"
sign-on-push = true
colocate = true

[revset-aliases]
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'closest_pushable(to)' = 'heads(::to & mutable() & ~description(exact:"") & (~empty() | merges()))'
'why_immutable(r)' = '(r & immutable()) | roots(r:: & immutable_heads())'
# Show more context around the current working copy.
# The default revset (present(@) | ancestors(immutable_heads().., 2) | present(trunk()))
# will basically only show mutable revisions. Sometimes you're working on a long diverging
# branch with other people (who don't like to see their work rebased) and you want to see
# everything that is not in trunk "around" that branch, including immutable revisions.
log = "ancestors(reachable(@, trunk()..), 2)"


[signing]
behavior = "drop"
backend = "gpg"

[templates]
draft_commit_description = '''
concat(
  if(
    !description && parents.len() > 1,
    concat(separate(" ",
      "Merge",
      if(parents.len() > 2, "branches", "branch"),
      "into",
      parents.map(|p| coalesce(
        p.bookmarks().map(|b| b.name()).join(", "),
        p.commit_id().short(),
      )).join(", "),
    )),
  ),
  builtin_draft_commit_description,
  "\nJJ: ignore-rest\n",
  diff.git(),
)
'''
git_push_bookmark = '''
"calebdw/push-" ++ change_id.short()
'''

[ui]
default-command = "log"
diff-editor = ["nvim", ".", "-c", "DiffEditor $left $right $output"]

[ui.movement]
# edit = true
