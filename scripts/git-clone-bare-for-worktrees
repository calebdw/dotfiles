#!/usr/bin/env bash

set -e

usage() {
    echo "Usage: $0 <repo-url> [<directory-name>]"
    exit 1
}

if [ -z "$1" ]; then
    usage
fi

url=$1
basename=${url##*/}
name=${2:-${basename%.*}}

if [[ -d "$name" ]]; then
    echo "Directory '$name' already exists!"
    exit 1
fi

echo "Creating directory $name..."
mkdir "$name" && cd "$name"

git clone --bare --depth=1 "$url" .git

echo "Configuring origin remote..."
git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
git config core.logallrefupdates true
git fetch origin

# Need to remove all local branches with invalid upstream refs
# See: https://stackoverflow.com/questions/54367011/git-bare-repositories-worktrees-and-tracking-branches
git for-each-ref --format='%(refname:short)' refs/heads | xargs git branch -D

echo "Discovering default branch..."
default_branch=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')

if [ -n "$default_branch" ]; then
    echo "Creating initial worktree for the default branch (origin/$default_branch)..."
    git worktree add -B "$default_branch" "$default_branch" "origin/$default_branch"
fi

if command -v git-remote-add-fork &>/dev/null; then
    echo "Adding fork remote..."
    git-remote-add-fork
fi
